<div id="gridContainer"></div>

@(
Html.DevExtreme().DataGrid<ProductInformation>()
    .ID("gridContainer")
    .AllowColumnReordering(true)
    .RowAlternationEnabled(true)
    .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto))
    .ShowBorders(true)
    .HoverStateEnabled(true)
    .Paging(paging => paging.PageSize(10))
    .Pager(pager =>
    {
        pager.Visible(true);
        pager.DisplayMode(GridPagerDisplayMode.Full);
        pager.ShowInfo(true);
        pager.ShowNavigationButtons(true);
    })
    .ShowBorders(true)
    .Editing(editing =>
    {
        editing.Mode(GridEditMode.Form);
        editing.UseIcons(true);
        editing.Texts(_ => _.AddRow("Add Product Information"));
        editing.RefreshMode(GridEditRefreshMode.Reshape);
        editing.AllowUpdating(true);
        editing.AllowDeleting(true);
        editing.AllowAdding(true);
    })

    .Toolbar(toolbar =>
    {
        toolbar.Items(items =>
        {
            items.Add()
                .Name("addRowButton")
                .ShowText(ToolbarItemShowTextMode.Always);
        });
    })

    .Columns(columns =>
    {
        columns.AddFor(_ => _.Name)
            .Alignment(HorizontalAlignment.Center)
            .ValidationRules(_ => _.AddStringLength()
                .Max(100)
                .Message("Length should be 100 or less")); 
         
        columns.AddFor(_ => _.Description)
            .Alignment(HorizontalAlignment.Center)
            .ValidationRules(_ => _.AddStringLength()
                .Max(20)
                .Message("Length should be 300 or less"));


        columns.AddFor(_ => _.Price)
            .Alignment(HorizontalAlignment.Center)
            .ValidationRules(_ => _.AddRequired()
                .Message("Should be greater than 0"));

        columns.AddFor(_ => _.Quantity)
            .Alignment(HorizontalAlignment.Center)
            .ValidationRules(_ => _.AddRequired()
                .Message("Should be greater than 0"));
    })

    .DataSource(_ => _.Mvc()
        .Controller("Home")
        .LoadAction("Get")
        .InsertAction("Create")
        .UpdateAction("Update")
        .DeleteAction("Delete")
        .Key("ProductId")
    )
)